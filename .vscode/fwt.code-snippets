{
	// Place your cc-website workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"React Functional Component with Type": {
        "scope": "typescriptreact",
        "prefix": "rfc",
        "body": [
			"import React from 'react';",
			"",
			"type $1Props = React.HTMLAttributes<$2> & {",
			"	$3",
			"};",
			"",
			"export const $1: React.FC<$1Props> = (props: $1Props) => (",
			"	$4",
			");",
			""
		],
        "description": "Create a TypeScript react component with Type Props."
	},
	"SSR NextJS Page": {
		"scope": "typescriptreact",
		"prefix": "ssr",
		"body": [
			"import React from 'react';",
			"import { GetServerSideProps } from 'next';",
			"",
			"type $1Props = {",
			"	$2",
			"};",
			"",
			"export const $1: React.FC<$1Props> = (props: $1Props) => (",
			"	$3",
			");",
			"",
			"export const getServerSideProps: GetServerSideProps<$1Props> = async (ctx) => {",
			"	const props: $1Props = {",
			"		$2",
			"	}",
			"",
			"	return {",
			"		props,",
			"	};"
			"};",
		],
	},
	"SSG NextJS Page": {
		"scope": "typescriptreact",
		"prefix": "ssg",
		"body": [
			"import React from 'react';",
			"import { GetStaticProps } from 'next';",
			"",
			"type $1Props = {",
			"	$2",
			"};",
			"",
			"export const $1: React.FC<$1Props> = (props: $1Props) => (",
			"	$3",
			");",
			"",
			"export const getStaticProps: GetStaticProps<$1Props> = async (ctx) => {",
			"	const props: $1Props = {",
			"		$2",
			"	}",
			"",
			"	return {",
			"		props,",
			"	};"
			"};",
		],
	},
	"SSG NextJS Page with Static Paths": {
		"scope": "typescriptreact",
		"prefix": "ssgp",
		"body": [
			"import React from 'react';",
			"import { GetStaticProps, GetStaticPaths } from 'next';",
			"",
			"type $1Props = {",
			"	$3",
			"};",
			"",
			"export const $1: React.FC<$1Props> = (props: $1Props) => (",
			"	$4",
			");",
			"",
			"export const getStaticProps: GetStaticProps<$1Props> = async (ctx) => {",
			"	const props: $1Props = {",
			"		$3",
			"	}",
			"",
			"	return {",
			"		props,",
			"	};"
			"};",
			"",
			"export const getStaticPaths: GetStaticPaths = async () => {",
			"	return {",
			"		paths: [{ params: { $2: '1' } }],",
			"		fallback: false,",
			"	};",
			"};"
		],
	},
}